name: Release

on:
  release:
    types: [published]

env:
  DOTNET_VERSION: '9.0.x'
  APP_NAME: 'IPGet'
  BUILD_CONFIG: 'Release'

jobs:
  build-and-publish-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x64, x86]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ./IPGet/IPGet/IPGet.csproj

      - name: Publish
        run: |
          $outputDir="${{ matrix.os }}-${{ matrix.arch }}"
          dotnet publish ./IPGet/IPGet/IPGet.csproj -c ${{ env.BUILD_CONFIG }} --no-restore -o $outputDir -r win-${{ matrix.arch }} -p:PublishTrimmed=true --self-contained true          

      - name: Rename output file
        run: |
          $currentDir=$PWD.Path
          $outputDir="${{ matrix.os }}-${{ matrix.arch }}"
          $oldFileName="${{ env.APP_NAME }}.exe"
          $newFileName="${{ env.APP_NAME }}_${{ github.event.release.tag_name }}_${outputDir}.exe"

          $absoluteOutputPath = Join-Path -Path $currentDir -ChildPath $outputDir
          $oldFilePath = Join-Path -Path $absoluteOutputPath -ChildPath $oldFileName
          $newFilePath = Join-Path -Path $absoluteOutputPath -ChildPath $newFileName

          if (Test-Path $oldFilePath) {
              Rename-Item -Path $oldFilePath -NewName $newFilePath
              Write-Host "File renamed from $oldFileName to $newFileName"
          } else {
              Write-Host "File $oldFileName does not exist."
          }

  build-and-publish-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x64]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ./IPGet/IPGet/IPGet.csproj

      - name: Publish
        run: |
          outputDir=""
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            outputDir="${{ matrix.os }}-${{ matrix.arch }}"
            dotnet publish ./IPGet/IPGet/IPGet.csproj -c ${{ env.BUILD_CONFIG }} --no-restore -o $outputDir -r linux-${{ matrix.arch }} -p:PublishTrimmed=true --self-contained true
          else 
            outputDir="./macos-${{ matrix.arch }}"
            dotnet publish ./IPGet/IPGet/IPGet.csproj -c ${{ env.BUILD_CONFIG }} --no-restore -o $outputDir -r osx-${{ matrix.arch }} -p:PublishTrimmed=true --self-contained true         
          fi

      - name: Rename output file
        run: |
          currentDir=$(pwd)
          outputDir="${{ matrix.os }}-${{ matrix.arch }}"
          oldFileName="${{ env.APP_NAME }}"
          newFileName="${{ env.APP_NAME }}_${{ github.event.release.tag_name }}_${outputDir}"

          absoluteOutputPath="$currentDir/$outputDir"
          oldFilePath="$absoluteOutputPath/$oldFileName"
          newFilePath="$absoluteOutputPath/$newFileName"
          
          if [ -f "$oldFilePath" ]; then
              mv "$oldFilePath" "$newFilePath"
              echo "File renamed from $oldFileName to $newFileName"
          else
              echo "File $oldFileName does not exist."
          fi

  create-release:
    needs: [build-and-publish-windows, build-and-publish-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: Release ${{ github.event.release.tag_name }}
          files: |
            ./windows-latest-x64/${{ env.APP_NAME }}_${{ github.event.release.tag_name }}_win-x64.exe
            ./windows-latest-x86/${{ env.APP_NAME }}_${{ github.event.release.tag_name }}_win-x86.exe
            ./ubuntu-latest-x64/${{ env.APP_NAME }}_${{ github.event.release.tag_name }}_linux-x64
            ./macos-latest-x64/${{ env.APP_NAME }}_${{ github.event.release.tag_name }}_macos-x64
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
