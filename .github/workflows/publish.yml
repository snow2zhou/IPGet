name: Release

on:
  release:
    types: [published]
env:
  DOTNET_VERSION: '9.0.x' # The .NET SDK version to use

jobs:
  build-and-publish-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('./IPGet/IPGet/IPGet.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore  ./IPGet/IPGet/IPGet.csproj
            
    - name: Publish x64
      run: dotnet publish ./IPGet/IPGet/IPGet.csproj -c Release --no-restore -o ./win-x64 -r win-x64 -p:PublishTrimmed=true --self-contained true
      
    - name: Publish x86
      run: dotnet publish ./IPGet/IPGet/IPGet.csproj -c Release --no-restore -o ./win-x86 -r win-x86 -p:PublishTrimmed=true --self-contained true
      
    - name: Rename x64 file
      shell: pwsh
      run: |
          $currentDir = $PWD.Path
          $outputDir = "win-x64"
          $oldFileName = "IPGet.exe"
          $newFileName = "IPGet_${{ github.event.release.tag_name }}_$outputDir.exe"

          $absoluteOutputPath = Join-Path -Path $currentDir -ChildPath $outputDir
          $oldFilePath = Join-Path -Path $absoluteOutputPath -ChildPath $oldFileName
          $newFilePath = Join-Path -Path $absoluteOutputPath -ChildPath $newFileName
          
          if (Test-Path $oldFilePath) {
              Rename-Item -Path $oldFilePath -NewName $newFilePath
              Write-Host "File renamed from $oldFileName to $newFileName"
          } else {
              Write-Host "File $oldFileName does not exist."
          }
          
    - name: Rename x86 file
      shell: pwsh
      run: |
          $currentDir = $PWD.Path
          $outputDir = "win-x86"
          $oldFileName = "IPGet.exe"
          $newFileName = "IPGet_${{ github.event.release.tag_name }}_$outputDir.exe"

          $absoluteOutputPath = Join-Path -Path $currentDir -ChildPath $outputDir
          $oldFilePath = Join-Path -Path $absoluteOutputPath -ChildPath $oldFileName
          $newFilePath = Join-Path -Path $absoluteOutputPath -ChildPath $newFileName
          
          if (Test-Path $oldFilePath) {
              Rename-Item -Path $oldFilePath -NewName $newFilePath
              Write-Host "File renamed from $oldFileName to $newFileName"
          } else {
              Write-Host "File $oldFileName does not exist."
          }

  build-and-publish-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ./IPGet/IPGet/IPGet.csproj
            
    - name: Publish x64
      run: dotnet publish ./IPGet/IPGet/IPGet.csproj -c Release --no-restore -o ./linux-x64 -r linux-x64 -p:PublishTrimmed=true --self-contained true
      
    - name: Rename x64 file
      run: |
          currentDir=$(pwd)
          outputDir="linux-x64"
          oldFileName="IPGet"
          newFileName="IPGet_${{ github.event.release.tag_name }}_$outputDir"

          absoluteOutputPath="$currentDir/$outputDir"
          oldFilePath="$absoluteOutputPath/$oldFileName"
          newFilePath="$absoluteOutputPath/$newFileName"
          
          if [ -f "$oldFilePath" ]; then
              mv "$oldFilePath" "$newFilePath"
              echo "File renamed from $oldFileName to $newFileName"
          else
              echo "File $oldFileName does not exist."
          fi

  build-and-publish-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ./IPGet/IPGet/IPGet.csproj

    - name: Publish x64
      run: dotnet publish ./IPGet/IPGet/IPGet.csproj -c Release --no-restore -o ./macos-x64 -r osx-x64 -p:PublishTrimmed=true --self-contained true

    - name: Rename x64 file
      run: |
          currentDir=$(pwd)
          outputDir="macos-x64"
          oldFileName="IPGet"
          newFileName="IPGet_${{ github.event.release.tag_name }}_$outputDir"

          absoluteOutputPath="$currentDir/$outputDir"
          oldFilePath="$absoluteOutputPath/$oldFileName"
          newFilePath="$absoluteOutputPath/$newFileName"
          
          if [ -f "$oldFilePath" ]; then
              mv "$oldFilePath" "$newFilePath"
              echo "File renamed from $oldFileName to $newFileName"
          else
              echo "File $oldFileName does not exist."
          fi
         
  create-release:
      needs: [build-and-publish-windows, build-and-publish-linux, build-and-publish-macos]
      runs-on: ubuntu-latest
      steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: Release ${{ github.event.release.tag_name }}
          files: |
            ./win-x64/IPGet_${{ github.event.release.tag_name }}_win-x64.exe
            ./win-x86/IPGet_${{ github.event.release.tag_name }}_win-x86.exe
            ./linux-x64/IPGet_${{ github.event.release.tag_name }}_linux-x64
            ./macos-x64/IPGet_${{ github.event.release.tag_name }}_macos-x64
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
